SELECT * 
FROM TABLE_NAME
ORDER BY ID DESC
LIMIT 1

SELECT CURRENT_TIME(),"HAI";
SELECT SESSIONNAME FROM TYPEOFFOOD WHERE '11:00' BETWEEN SESSIONSTART AND SESSIONEND;
SELECT SESSIONNAME FROM TYPEOFFOOD WHERE TYPEID = (SELECT TYPEID FROM FOOD WHERE 'IDLY' = FOOD)

SELECT (FLOOR(RAND()*(10-1+1))+1)

SELECT 11 BETWEEN 1 AND 10;

SELECT JSON_TYPE('"HELLO"')

CREATE TABLE T1 (JDOC JSON);

SELECT COUNT(*) FROM SUBORDERS;

CALL SUBORDERSPROCEDURE(1, 1, 5, 1);
CALL SUBORDERSPROCEDURE(1, 2, 5, 1);
CALL SUBORDERSPROCEDURE(1, 3, 5, 1);
CALL SUBORDERSPROCEDURE(1, 4, 5, 1);
CALL SUBORDERSPROCEDURE(1, 5, 5, 1);
CALL SUBORDERSPROCEDURE(1, 6, 5, 1);
CALL SUBORDERSPROCEDURE(1, 7, 5, 1);

SELECT COUNT(DISTINCT(FOODID)) FROM SUBORDERS WHERE ORDERID = 1;

SELECT * FROM SUBORDERS GROUP BY ORDERID;

SELECT ID FROM TYPEOFFOOD WHERE CURRENT_TIME() BETWEEN SESSIONSTART AND SESSIONEND AND ID =

SELECT ID FROM FOOD WHERE FOOD = 'COFFEE';

SELECT TYPEID FROM FOODTOTYPEMAP WHERE FOODID = (SELECT ID FROM FOOD WHERE FOOD = 'IDLY') AND TYPEID IN (SELECT ID FROM TYPEOFFOOD WHERE CURRENT_TIME() BETWEEN SESSIONSTART AND SESSIONEND);

SELECT SUM(QTY) FROM SUBORDERS WHERE FOODID = 10 AND ORDERSID IN (SELECT ID FROM ORDERS WHERE TIMEANDDATE >= CURRENT_DATE())
SELECT SUM(QTY) FROM SUBORDERS WHERE FOODID = 10 AND ORDERSID IN (SELECT ID FROM ORDERS WHERE TIMEANDDATE >= CURRENT_DATE()) IS NULL

SELECT (SELECT QTY FROM TYPEOFFOOD WHERE ID = 3) >= (SELECT SUM(QTY) FROM SUBORDERS WHERE FOODID = 10 AND ORDERSID IN (SELECT ID FROM ORDERS WHERE TIMEANDDATE >= CURRENT_DATE()));

SELECT NULL IS NOT NULL;
SELECT 1 IS NOT NULL;

SHOW VARIABLES MAX_SP_RECURSION_DEPTH;




SELECT FOOD.`ID`, FOODNAME, TYPEOFFOOD.QTY - SUM(SUBORDERS.QTY) AS "STOCK REMAINING"
FROM TYPEOFFOOD
JOIN FOOD, SUBORDERS, FOODTOTYPEMAP, ORDERS WHERE TYPEID = TYPEOFFOOD.ID AND FOOD.ID = SUBORDERS.FOODID AND FOOD.`ID` = FOODTOTYPEMAP.FOODID AND ORDERSID = ORDERS.`ID` AND DATEDIFF(CURDATE(), TIMEANDDATE) = 0 AND ORDERSSTATUS = 1 GROUP BY FOOD.ID

UNION

SELECT FOOD.`ID`, FOODNAME, TYPEOFFOOD.QTY AS "STOCK REMAINING"
FROM FOOD
JOIN TYPEOFFOOD, FOODTOTYPEMAP WHERE TYPEID = TYPEOFFOOD.ID AND FOOD.`ID` = FOODTOTYPEMAP.FOODID AND FOOD.ID NOT IN(SELECT FOOD.`ID` FROM TYPEOFFOOD JOIN FOOD, SUBORDERS, FOODTOTYPEMAP, ORDERS WHERE TYPEID = TYPEOFFOOD.ID AND FOOD.ID = SUBORDERS.FOODID AND FOOD.`ID` = FOODTOTYPEMAP.FOODID AND ORDERSID = ORDERS.`ID` AND DATEDIFF(CURDATE(), TIMEANDDATE) = 0 AND ORDERSSTATUS = 1 GROUP BY FOOD.ID) GROUP BY FOOD.ID; /*THE STOCKPILE REMAINS CODE*/

SELECT *
FROM FOOD
JOIN TYPEOFFOOD, FOODTOTYPEMAP, SUBORDERS WHERE FOOD.ID = FOODTOTYPEMAP.FOODID AND TYPEID = TYPEOFFOOD.`ID` OR FOOD.ID = SUBORDERS.FOODID

SELECT SLEEP(5);


SET @ORDERS = 'IDLY 5,VADA 10,DOSA 5';
SELECT @ORDERS;

SELECT SUBSTRING_INDEX(@ORDERS,',',1);

SET @SUBORDER = SUBSTRING_INDEX(@ORDERS,',',1);
SELECT @SUBORDER;
SELECT REPLACE(@ORDERS,CONCAT(@SUBORDER,','),'');
SET @ORDERS = REPLACE(@ORDERS,CONCAT(@SUBORDER,','),'');
SELECT @ORDERS;

SET @SUBORDER = SUBSTRING_INDEX(@ORDERS,',',1);
SELECT @SUBORDER;
SELECT REPLACE(@ORDERS,CONCAT(@SUBORDER,','),'');
SET @ORDERS = REPLACE(@ORDERS,CONCAT(@SUBORDER,','),'');
SELECT @ORDERS;

SET @SUBORDER = SUBSTRING_INDEX(@ORDERS,',',1);
SELECT @SUBORDER;
SELECT REPLACE(@ORDERS,CONCAT(@SUBORDER,','),'');
SET @ORDERS = REPLACE(@ORDERS,CONCAT(@SUBORDER,','),'');
SELECT @ORDERS;


SET @SUBORDER = SUBSTRING_INDEX(@ORDERS,',',1);
SELECT @SUBORDER;
SELECT REPLACE(@ORDERS,CONCAT(@SUBORDER,','),'');
SET @ORDERS = REPLACE(@ORDERS,CONCAT(@SUBORDER,','),'');
SELECT @ORDERS;

SELECT POSITION(' ' IN ' DOSA 10')
SELECT SUBSTRING_INDEX(' DOSA 10, VADA 10',' ',1)



